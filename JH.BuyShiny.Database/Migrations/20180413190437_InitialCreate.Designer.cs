// <auto-generated />
using JH.BuyShiny.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using MySql.Data.EntityFrameworkCore.Storage.Internal;
using System;

namespace JH.BuyShiny.Database.Migrations
{
    [DbContext(typeof(BuyShinyContext))]
    [Migration("20180413190437_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("JH.BuyShiny.Database.PasswordReset", b =>
                {
                    b.Property<string>("Code")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("ActivatedDate");

                    b.Property<DateTime>("ResetRequestDate");

                    b.Property<int?>("UserId");

                    b.HasKey("Code");

                    b.HasIndex("UserId");

                    b.ToTable("PasswordResets");
                });

            modelBuilder.Entity("JH.BuyShiny.Database.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Body");

                    b.Property<int>("DownVotes");

                    b.Property<string>("ImageUrl");

                    b.Property<DateTime>("PostTimeUtc");

                    b.Property<int>("PostType");

                    b.Property<int>("Status");

                    b.Property<string>("Title");

                    b.Property<int>("UpVotes");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("JH.BuyShiny.Database.PostRead", b =>
                {
                    b.Property<int>("PostId");

                    b.Property<int>("UserId");

                    b.HasKey("PostId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("PostReads");
                });

            modelBuilder.Entity("JH.BuyShiny.Database.PostVote", b =>
                {
                    b.Property<int>("PostId");

                    b.Property<int>("UserId");

                    b.Property<bool>("Down");

                    b.Property<bool>("Up");

                    b.HasKey("PostId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("PostVotes");
                });

            modelBuilder.Entity("JH.BuyShiny.Database.Reply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DownVotes");

                    b.Property<string>("Message");

                    b.Property<int?>("PostId");

                    b.Property<DateTime>("ReplyTimeUtc");

                    b.Property<bool>("TradeVerified");

                    b.Property<int>("UpVotes");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Replies");
                });

            modelBuilder.Entity("JH.BuyShiny.Database.ReplyRead", b =>
                {
                    b.Property<int>("ReplyId");

                    b.Property<int>("UserId");

                    b.HasKey("ReplyId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("ReplyReads");
                });

            modelBuilder.Entity("JH.BuyShiny.Database.ReplyVote", b =>
                {
                    b.Property<int>("ReplyId");

                    b.Property<int>("UserId");

                    b.Property<bool>("Down");

                    b.Property<bool>("Up");

                    b.HasKey("ReplyId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("ReplyVote");
                });

            modelBuilder.Entity("JH.BuyShiny.Database.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Description");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("JH.BuyShiny.Database.Timezone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<int>("UtcOffsetMinutes");

                    b.HasKey("Id");

                    b.ToTable("Timezones");
                });

            modelBuilder.Entity("JH.BuyShiny.Database.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTime>("Created");

                    b.Property<string>("EmailAddress");

                    b.Property<bool>("EmailVerified");

                    b.Property<string>("PasswordHash");

                    b.Property<int?>("TimezoneId");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.HasIndex("TimezoneId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("JH.BuyShiny.Database.UserRole", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasAlternateKey("RoleId", "UserId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("JH.BuyShiny.Database.UserVerify", b =>
                {
                    b.Property<string>("Token")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ExpirationDateUtc");

                    b.Property<int?>("UserId");

                    b.Property<DateTime?>("VerifiedAtUtc");

                    b.HasKey("Token");

                    b.HasIndex("UserId");

                    b.ToTable("UserVerifies");
                });

            modelBuilder.Entity("JH.BuyShiny.Database.PasswordReset", b =>
                {
                    b.HasOne("JH.BuyShiny.Database.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("JH.BuyShiny.Database.Post", b =>
                {
                    b.HasOne("JH.BuyShiny.Database.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("JH.BuyShiny.Database.PostRead", b =>
                {
                    b.HasOne("JH.BuyShiny.Database.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("JH.BuyShiny.Database.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JH.BuyShiny.Database.PostVote", b =>
                {
                    b.HasOne("JH.BuyShiny.Database.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("JH.BuyShiny.Database.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JH.BuyShiny.Database.Reply", b =>
                {
                    b.HasOne("JH.BuyShiny.Database.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId");

                    b.HasOne("JH.BuyShiny.Database.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("JH.BuyShiny.Database.ReplyRead", b =>
                {
                    b.HasOne("JH.BuyShiny.Database.Reply", "Reply")
                        .WithMany()
                        .HasForeignKey("ReplyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("JH.BuyShiny.Database.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JH.BuyShiny.Database.ReplyVote", b =>
                {
                    b.HasOne("JH.BuyShiny.Database.Reply", "Reply")
                        .WithMany()
                        .HasForeignKey("ReplyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("JH.BuyShiny.Database.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JH.BuyShiny.Database.Role", b =>
                {
                    b.HasOne("JH.BuyShiny.Database.User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("JH.BuyShiny.Database.User", b =>
                {
                    b.HasOne("JH.BuyShiny.Database.Timezone", "Timezone")
                        .WithMany()
                        .HasForeignKey("TimezoneId");
                });

            modelBuilder.Entity("JH.BuyShiny.Database.UserRole", b =>
                {
                    b.HasOne("JH.BuyShiny.Database.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("JH.BuyShiny.Database.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JH.BuyShiny.Database.UserVerify", b =>
                {
                    b.HasOne("JH.BuyShiny.Database.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
